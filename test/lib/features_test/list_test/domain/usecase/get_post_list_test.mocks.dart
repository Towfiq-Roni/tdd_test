// Mocks generated by Mockito 5.4.4 from annotations
// in tdd_test/test/lib/features_test/list_test/domain/usecase/get_post_list_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:tdd_test/features/list/domain/entity/post_list_entity.dart'
    as _i2;
import 'package:tdd_test/features/list/domain/repository/list_repository.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePostListEntity_0 extends _i1.SmartFake
    implements _i2.PostListEntity {
  _FakePostListEntity_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ListRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockListRepository extends _i1.Mock implements _i3.ListRepository {
  MockListRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.PostListEntity> getPosts() => (super.noSuchMethod(
        Invocation.method(
          #getPosts,
          [],
        ),
        returnValue: _i4.Future<_i2.PostListEntity>.value(_FakePostListEntity_0(
          this,
          Invocation.method(
            #getPosts,
            [],
          ),
        )),
      ) as _i4.Future<_i2.PostListEntity>);
}
